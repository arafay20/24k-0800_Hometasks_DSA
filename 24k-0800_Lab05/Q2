#include<iostream>
using namespace std;

void displayarray(int arr[4][4]) {
    for(int i = 0; i < 4; i++) {
        for(int j = 0; j < 4; j++) {
            cout << arr[i][j] << " ";
        }
        cout << endl;
    }
}

bool issafe(int arr[4][4], int x, int y, int n) {
    if (x < n && y < n && arr[x][y] == 1) {
        return true;
    }
    return false;
}

bool liontomeat(int arr[4][4], int x, int y, int n, int solarr[4][4]) {
    if ((x == n-1) && (y == n-1)) {  // reached destination
        solarr[x][y] = 1;
        return true;
    }

    if (issafe(arr, x, y, n)) {
        solarr[x][y] = 1;

        // move down
        if (liontomeat(arr, x+1, y, n, solarr)) {
            return true;
        }

        // move right
        if (liontomeat(arr, x, y+1, n, solarr)) {
            return true;
        }

        // backtrack
        solarr[x][y] = 0;
        return false;
    }

    return false;
}

int main() {
    int arr1[4][4];

    cout << "Enter elements for the maze (1=path, 0=wall):" << endl;
    for(int i = 0; i < 4; i++) {
        for(int j = 0; j < 4; j++) {
            cout << "Enter element [" << i+1 << "][" << j+1 << "]: ";
            cin >> arr1[i][j];
        }
    }

    int solarr[4][4] = {0}; // initialize all to 0

    bool reached = liontomeat(arr1, 0, 0, 4, solarr);

    if (reached) {
        cout << "Path found:" << endl;
        displayarray(solarr);
    } else {
        cout << "No path exists!" << endl;
    }

    return 0;
}
