#include <iostream>
#include <cctype>
#include <cstring>
using namespace std;

#define MAX 100

class Stack {
    double arr[MAX];
    int top;
public:
    Stack() { top = -1; }

    void push(double value) { arr[++top] = value; }

    double pop() { return arr[top--]; }

    bool empty() { return top == -1; }
};

double power(double base, double exp) {
    double result = 1;
    for (int i = 0; i < (int)exp; i++)
        result *= base;
    return result;
}

double calculate(double a, double b, char op) {
    if (op == '+') return a + b;
    if (op == '-') return a - b;
    if (op == '*') return a * b;
    if (op == '/') return b == 0 ? 0 : a / b;
    if (op == '^') return power(a, b);
    return 0;
}

double evaluate(const char exp[]) {
    Stack s;
    int len = strlen(exp);

    for (int i = len - 1; i >= 0; i--) {
        char c = exp[i];
        if (c == ' ') continue;

        if (isdigit(c))
            s.push(c - '0');
        else {
            double x = s.pop();
            double y = s.pop();
            s.push(calculate(x, y, c));
        }
    }
    return s.pop();
}

int main() {
    char exp[100];
    cout << "Enter prefix expression: ";
    cin >> exp;

    cout << "Result: " << evaluate(exp);
    return 0;
}
